#include <SPI.h> #include <MFRC522.h> #include<LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x3F,16,2);

#define SS_PIN 10 #define RST_PIN 9 #define LED_G 5 //define green LED pin #define LED_R 6 //define red LED

MFRC522 mfrc522(SS_PIN, RST_PIN); // Create MFRC522 instance.

void setup() { Serial.begin(9600); lcd.init(); lcd.backlight(); lcd.clear();

SPI.begin(); // Initiate SPI bus mfrc522.PCD_Init(); // Initiate MFRC522

pinMode(LED_G, OUTPUT); pinMode(LED_R, OUTPUT);

Serial.println("Aproxime o cart√£o");

} void loop() { // Look for new cards if ( ! mfrc522.PICC_IsNewCardPresent()) { return; } // Select one of the cards if ( ! mfrc522.PICC_ReadCardSerial()) { return; }

String content= ""; byte letter; for (byte i = 0; i < mfrc522.uid.size; i++) { Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "); Serial.print(mfrc522.uid.uidByte[i], HEX); content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ")); content.concat(String(mfrc522.uid.uidByte[i], HEX)); }

content.toUpperCase(); if (content.substring(1) == "B0 F0 11 A4" ) //change here the UID of the card/cards that you want to give access { digitalWrite(LED_G, HIGH); lcd.setCursor(1,0); lcd.print("Acesso liberado"); Serial.println(); delay(3000); digitalWrite(LED_G, LOW); lcd.clear();

}

else {

digitalWrite(LED_R, HIGH);
lcd.setCursor(1,0);
lcd.print("Acesso negado");
delay(3000);
lcd.clear ();
digitalWrite(LED_R, LOW);
} }
