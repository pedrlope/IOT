#include <Wire.h> #include <LiquidCrystal_I2C.h>

#define endereco 0x3F
#define colunas 16 #define linhas 2

LiquidCrystal_I2C lcd(endereco, colunas, linhas);

const int inferior = 512; const int superior = 520;

void setup() { pinMode(2, INPUT); pinMode (A0, INPUT); pinMode (A1, INPUT); Serial.begin(9600);

lcd.init(); // INICIA A COMUNICAÇÃO COM O DISPLAY lcd.backlight(); // LIGA A ILUMINAÇÃO DO DISPLAY }

void loop() { lcd.clear();

int POTENCIOMETRO_X = analogRead(A0); int POTENCIOMETRO_Y = analogRead(A1); int button = digitalRead(2);

if (POTENCIOMETRO_X > 540){ Serial.print("X: "); Serial.println(POTENCIOMETRO_X); delay(1000); } if (POTENCIOMETRO_Y > 540){ Serial.print("Y: "); Serial.println(POTENCIOMETRO_Y); delay(1000); }

if ((POTENCIOMETRO_X > superior && POTENCIOMETRO_X < 1023) && (POTENCIOMETRO_Y >= inferior && POTENCIOMETRO_Y < 1023)) { lcd.setCursor(0, 0); lcd.print("PARA FRENTE"); Serial.print("para frente ");

} else if ((POTENCIOMETRO_X < inferior) && (POTENCIOMETRO_Y >= inferior && POTENCIOMETRO_Y < 1023)) { lcd.setCursor(0, 0); lcd.print("PARA TRAZ"); Serial.print("para traz "); } else if (POTENCIOMETRO_Y > superior + 100) { lcd.setCursor(0, 0); lcd.print("DIREITA"); Serial.print("direita "); } else if (POTENCIOMETRO_Y < inferior - 100) { lcd.setCursor(0, 0); lcd.print("ESQUERDA"); Serial.print("esquerda "); } else { lcd.setCursor(0, 0); lcd.print("PARADO"); Serial.print("parado "); }

if (button == HIGH) { lcd.setCursor(0, 1); lcd.print("CLIQUE"); }

delay(3000); // Espera por 3000 milissegundos } if (button == HIGH) { lcd.setCursor(0, 1); lcd.print("CLIQUE"); }

delay(3000); // Espera por 3000 milissegundos }
